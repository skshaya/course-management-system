package com.system.ui;

import com.system.dao.BookingAvailabilityDao;
import com.system.dao.BookingDao;
import com.system.dao.CourseDao;
import com.system.dao.DivisionDao;
import com.system.dao.GroupDao;
import com.system.dao.StudentBookingHistoryDao;
import com.system.dto.StudentBookingDto;
import com.system.model.Booking;
import com.system.model.Course;
import com.system.model.Group;
import com.system.utils.Constant;
import com.system.utils.ResourceNotFoundException;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class MyBooking extends javax.swing.JFrame {

    /**
     * Creates new form MyBooking
     */
    public MyBooking() {
        initComponents();
        setLocationRelativeTo(null);
        beforeMount();
        loadDataToComboBoxes();
        jDateChooser2.getJCalendar().setMinSelectableDate(new Date());
    }

    private void loadDataToComboBoxes() {
        courseCombo.addItem("Select");
        for (Course course : CourseDao.findAll()) {
            courseCombo.addItem(course.getName());
        }

        groupCombo.addItem("Select");
        for (Group group : GroupDao.findAll()) {
            groupCombo.addItem(group.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        bookingId = new javax.swing.JTextField();
        studentId = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        desc = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        filterBookingId = new javax.swing.JTextField();
        groupCombo = new javax.swing.JComboBox<>();
        courseCombo = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        divisionTxt = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 90, 36));

        jDateChooser2.setDateFormatString("yyyy-MMM-dd");
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        jDateChooser2.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jDateChooser2VetoableChange(evt);
            }
        });
        jPanel1.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 70, 234, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Date", "Division", "Group", "Course", "Amount", "Status", "Description"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 123, 920, 123));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 70, 90, 30));

        bookingId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingIdActionPerformed(evt);
            }
        });
        jPanel1.add(bookingId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 92, 35));

        studentId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(studentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 106, 35));

        amount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        amount.setToolTipText("");
        jPanel1.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 280, 144, 35));

        desc.setColumns(20);
        desc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        desc.setRows(5);
        jScrollPane2.setViewportView(desc);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 920, 50));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Edit");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 410, 94, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Booking Date");
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Student ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 253, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Division");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Group");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Course");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(715, 253, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Amount");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(881, 253, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Description");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        filterBookingId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(filterBookingId, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 162, 50));

        groupCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(groupCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 160, 35));

        courseCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        courseCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                courseComboItemStateChanged(evt);
            }
        });
        courseCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboActionPerformed(evt);
            }
        });
        jPanel1.add(courseCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 280, 160, 35));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/ui/Button-Close-icon.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 0, 20, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Booking ID");
        jLabel8.setToolTipText("");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 253, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Booking ID");
        jLabel9.setToolTipText("");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, -1, -1));

        divisionTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        divisionTxt.setEnabled(false);
        divisionTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionTxtActionPerformed(evt);
            }
        });
        jPanel1.add(divisionTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, 130, 35));

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("Cancel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(793, 410, 100, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("My Booking List");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 200, 40));

        jButton6.setBackground(new java.awt.Color(204, 255, 153));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/ui/Refresh-icon.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 50, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String date = null;
        refreshTable();
        List<StudentBookingDto> studentBookingDtos = new ArrayList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        if (jDateChooser2.getDate() != null) {
            date = sdf.format(jDateChooser2.getDate());
        }

        String bkId = filterBookingId.getText().isEmpty() ? "0" : filterBookingId.getText();
        int bookingId = Integer.parseInt(bkId);

        if (bookingId > 0 && date == null) {
            studentBookingDtos = StudentBookingHistoryDao.filterByBookingId(bookingId);
        } else if (bookingId == 0 && date != null) {
            studentBookingDtos = StudentBookingHistoryDao.filterByDateAndStudentId(date);
        } else if (bookingId > 0 && date != null) {
            JOptionPane.showMessageDialog(this, Constant.CANT_SEARCH, Constant.FAILED, JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, Constant.CANT_BE_EMPTY, Constant.FAILED, JOptionPane.ERROR_MESSAGE);
        }

        if (studentBookingDtos.isEmpty()) {
            JOptionPane.showMessageDialog(this, Constant.NO_RECORD_FOUND, Constant.NO_RECORD, JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
            Object rowData[] = new Object[8];
            for (int i = 0; i < studentBookingDtos.size(); i++) {
                rowData[0] = studentBookingDtos.get(i).getId();
                rowData[1] = studentBookingDtos.get(i).getDate();
                rowData[2] = studentBookingDtos.get(i).getDivisionName();
                rowData[3] = studentBookingDtos.get(i).getGroupName();
                rowData[4] = studentBookingDtos.get(i).getCourseName();
                rowData[5] = studentBookingDtos.get(i).getAmount();
                rowData[6] = studentBookingDtos.get(i).getStatus();
                rowData[7] = studentBookingDtos.get(i).getDescription();
                defaultTableModel.addRow(rowData);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void beforeMount() {
        refreshTable();
        List<StudentBookingDto> studentBookingDtos = StudentBookingHistoryDao.getAll();
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[8];
        for (int i = 0; i < studentBookingDtos.size(); i++) {
            rowData[0] = studentBookingDtos.get(i).getId();
            rowData[1] = studentBookingDtos.get(i).getDate();
            rowData[2] = studentBookingDtos.get(i).getDivisionName();
            rowData[3] = studentBookingDtos.get(i).getGroupName();
            rowData[4] = studentBookingDtos.get(i).getCourseName();
            rowData[5] = studentBookingDtos.get(i).getAmount();
            rowData[6] = studentBookingDtos.get(i).getStatus();
            rowData[7] = studentBookingDtos.get(i).getDescription();
            defaultTableModel.addRow(rowData);
        }
        studentId.setText(Integer.toString(Constant.studentId));
        studentId.setEnabled(false);
        bookingId.setEnabled(false);
        amount.setEnabled(false);
        jButton3.setVisible(false);
        jButton5.setVisible(false);
    }


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        Date d1 = null, d2 = null;
        SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");
        String dbDate = defaultTableModel.getValueAt(selectedRowIndex, 1).toString();
        String currentDate = sdformat.format(new Date());
        try {
            d1 = sdformat.parse(dbDate);
            d2 = sdformat.parse(currentDate);
        } catch (ParseException ex) {
            Logger.getLogger(MyBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (d1.compareTo(d2) == -1 || defaultTableModel.getValueAt(selectedRowIndex, 6).toString().equals(Constant.STATUS_CANCELLED)
                || defaultTableModel.getValueAt(selectedRowIndex, 6).toString().equals(Constant.STATUS_ATTENDED)) {
            jButton3.setEnabled(false);
            jButton5.setEnabled(false);
            groupCombo.setEnabled(false);
            courseCombo.setEnabled(false);
            desc.setEnabled(false);
        } else {
            jButton3.setEnabled(true);
            jButton5.setEnabled(true);
            groupCombo.setEnabled(true);
            courseCombo.setEnabled(true);
            desc.setEnabled(true);
            jButton3.setVisible(true);
            jButton5.setVisible(true);
        }
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) defaultTableModel.getValueAt(selectedRowIndex, 1));
            jDateChooser2.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(BookingCourse.class.getName()).log(Level.SEVERE, null, ex);
        }
        bookingId.setText(defaultTableModel.getValueAt(selectedRowIndex, 0).toString());
        studentId.setText(Integer.toString(Constant.studentId));
        divisionTxt.setText(defaultTableModel.getValueAt(selectedRowIndex, 2).toString());
        groupCombo.setSelectedItem(defaultTableModel.getValueAt(selectedRowIndex, 3).toString());
        courseCombo.setSelectedItem(defaultTableModel.getValueAt(selectedRowIndex, 4).toString());
        amount.setText(defaultTableModel.getValueAt(selectedRowIndex, 5).toString());
        desc.setText(defaultTableModel.getValueAt(selectedRowIndex, 7).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        refreshPage();
        jButton3.setEnabled(true);
        jButton5.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void refreshPage() {
        refreshFields();
        refreshTable();
    }

    private void refreshFields() {
        filterBookingId.setText("");
        bookingId.setText("");
        studentId.setText("");
        amount.setText("");
        clearComboBox();
        loadDataToComboBoxes();
        jDateChooser2.setDate(null);
    }

    private void clearComboBox() {
        groupCombo.removeAllItems();
        courseCombo.removeAllItems();
    }

    private void refreshTable() {
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }

    private void bookingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingIdActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (divisionTxt.getText().isEmpty()
                || groupCombo.getSelectedItem().toString().equals("Select")
                || courseCombo.getSelectedItem().toString().equals("Select")
                || jDateChooser2.getDate() == null) {
            JOptionPane.showMessageDialog(this, Constant.NOT_ACCEPTABLE, Constant.EMPTY, JOptionPane.ERROR_MESSAGE);
        } else if (!divisionTxt.getText().equals("Saturday") && !divisionTxt.getText().equals("Sunday")) {
            JOptionPane.showMessageDialog(this, Constant.INVALID_DAY, Constant.INVALID_DAY_FORMAT, JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(null, "Do You Really Want to change the booking", "Booking Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == 0) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String date = sdf.format(jDateChooser2.getDate());
                int month = 0;
                try {
                    Date d = sdf.parse(date);
                    LocalDate localDate = d.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    month = localDate.getMonthValue();
                } catch (ParseException ex) {
                    Logger.getLogger(BookingCourse.class.getName()).log(Level.SEVERE, null, ex);
                }

                String diviSonName = divisionTxt.getText();
                String groupName = groupCombo.getSelectedItem().toString();
                String courseName = courseCombo.getSelectedItem().toString();

                BookingDao bookingDao = new BookingDao();
                Booking booking = new Booking();
                booking.setId(Integer.parseInt(bookingId.getText()));
                booking.setStudentId(Constant.studentId);
                booking.setDivisionId(DivisionDao.getDivisionByName(diviSonName).getId());
                booking.setGroupId(GroupDao.getGroupByName(groupName).getId());
                booking.setCourseId(CourseDao.getCourseByName(courseName).getId());
                booking.setAmount(Double.parseDouble(amount.getText()));
                booking.setDate(date);
                booking.setMonth(month);
                booking.setStatus(Constant.STATUS_CHANGED);
                booking.setDescription(desc.getText());

                if (BookingDao.checkOverlapBookingWhenEditing(booking)) {
                    JOptionPane.showMessageDialog(this, Constant.OVERLAP_BOOKING_FOUND, Constant.OVERLAP, JOptionPane.ERROR_MESSAGE);
                } else if (BookingAvailabilityDao.checkBookingAvailability(date, DivisionDao.getDivisionByName(diviSonName).getId(), GroupDao.getGroupByName(groupName).getId(), CourseDao.getCourseByName(courseName).getId())) {
                    JOptionPane.showMessageDialog(this, Constant.BOOKING_NOT_AVAILABLE, Constant.BOOKING_FULL, JOptionPane.ERROR_MESSAGE);
                } else {
                    try {
                        Booking updated = bookingDao.update(booking);
                        JOptionPane.showMessageDialog(this, Constant.UPDATE, Constant.SUCCESS, JOptionPane.INFORMATION_MESSAGE);
                        beforeMount();
                        refreshFields();
                    } catch (ResourceNotFoundException resourceNotFoundException) {
                        JOptionPane.showMessageDialog(this, Constant.DATE_NOT_FOUND, Constant.INVALID_DATE, JOptionPane.ERROR_MESSAGE);
                    }

                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void courseComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_courseComboItemStateChanged
        // TODO add your handling code here:
        // System.out.println("changed");
    }//GEN-LAST:event_courseComboItemStateChanged

    private void courseComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboActionPerformed
        // TODO add your handling code here:
        String fees = "";
        String courseName = courseCombo.getSelectedItem() != null ? courseCombo.getSelectedItem().toString() : "Select";

        if (!courseName.equals("Select")) {
            fees = Double.toString(CourseDao.getCourseByName(courseName).getFees());
        }
        amount.setText(fees);
    }//GEN-LAST:event_courseComboActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
        // TODO add your handling code here:
        String date = null;
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        if (jDateChooser2.getDate() != null) {
            date = simpleDateFormat.format(jDateChooser2.getDate());
            Format format = new SimpleDateFormat("EEEE");
            String day = "";
            try {
                day = format.format(simpleDateFormat.parse(date));
                divisionTxt.setText(day.toString());
                System.out.println(day);
                if (!day.equals("Saturday") && !day.equals("Sunday")) {
                    JOptionPane.showMessageDialog(this, Constant.INVALID_DAY, Constant.INVALID_DAY_FORMAT, JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {
                Logger.getLogger(MyBooking.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void jDateChooser2VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jDateChooser2VetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser2VetoableChange

    private void divisionTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_divisionTxtActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, Constant.CANCEL_CONFIRMATION, Constant.CANCEL, JOptionPane.YES_NO_OPTION);
        if (confirm == 0) {
            int id = Integer.parseInt(bookingId.getText());
            int divisionId = DivisionDao.getDivisionByName(divisionTxt.getText()).getId();
            String groupName = groupCombo.getSelectedItem().toString();
            String courseName = courseCombo.getSelectedItem().toString();

            BookingDao.updateBookingStatus(id, Constant.STATUS_CANCELLED);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(jDateChooser2.getDate());
            BookingAvailabilityDao.updateBookingAvailabilityOnEditing(
                    date,
                    divisionId,
                    GroupDao.getGroupByName(groupName).getId(),
                    CourseDao.getCourseByName(courseName).getId());
            JOptionPane.showMessageDialog(this, Constant.CANCELED, Constant.SUCCESS, JOptionPane.INFORMATION_MESSAGE);
            beforeMount();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        beforeMount();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JTextField bookingId;
    private javax.swing.JComboBox<String> courseCombo;
    private javax.swing.JTextArea desc;
    private javax.swing.JTextField divisionTxt;
    private javax.swing.JTextField filterBookingId;
    private javax.swing.JComboBox<String> groupCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField studentId;
    // End of variables declaration//GEN-END:variables

}
