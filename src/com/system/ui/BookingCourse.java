package com.system.ui;

import com.system.dao.BookingAvailabilityReportDao;
import com.system.dao.BookingDao;
import com.system.dao.CourseDao;
import com.system.dao.DivisionDao;
import com.system.dao.GroupDao;
import com.system.dto.BookingAvailabilityDto;
import com.system.model.Booking;
import com.system.model.Course;
import com.system.model.Division;
import com.system.model.Group;
import com.system.utils.Constant;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class BookingCourse extends javax.swing.JFrame {

    /**
     * Creates new form BookingCourse
     */
    public BookingCourse() {
        initComponents();
        setLocationRelativeTo(null);
        loadDataToComboBoxes();
        jDateChooser2.getJCalendar().setMinSelectableDate(new Date());
    }

    private void loadDataToComboBoxes() {
        jComboBox2.addItem("Select");
        for (Division division : DivisionDao.loadToComboBox()) {
            jComboBox2.addItem(division.getName());
        }

        jComboBox1.addItem("Select");
        for (Course course : CourseDao.loadToComboBox()) {
            jComboBox1.addItem(course.getName());
        }

        jComboBox3.addItem("Select");
        for (Group group : GroupDao.loadToComboBox()) {
            jComboBox3.addItem(group.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        bookingId = new javax.swing.JTextField();
        studentId = new javax.swing.JTextField();
        division = new javax.swing.JTextField();
        group = new javax.swing.JTextField();
        course = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        desc = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 50, 180, 52));

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 180, 52));

        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 50, 209, 53));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(945, 50, 90, 30));

        jDateChooser2.setDateFormatString("yyyy-MMM-dd");
        jPanel1.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(722, 50, 180, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Division", "Group", "Course", "Availability", "Amount"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Availability");
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 124, 870, 123));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(945, 87, 90, 30));

        bookingId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingId.setEnabled(false);
        bookingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingIdActionPerformed(evt);
            }
        });
        jPanel1.add(bookingId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 286, 92, 35));

        studentId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        studentId.setEnabled(false);
        jPanel1.add(studentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 286, 106, 35));

        division.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        division.setEnabled(false);
        jPanel1.add(division, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 286, 144, 35));

        group.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        group.setEnabled(false);
        jPanel1.add(group, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 286, 144, 35));

        course.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        course.setEnabled(false);
        jPanel1.add(course, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 286, 144, 35));

        amount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        amount.setToolTipText("");
        amount.setEnabled(false);
        jPanel1.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 286, 144, 35));

        desc.setColumns(20);
        desc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        desc.setRows(5);
        jScrollPane2.setViewportView(desc);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 367, 864, 68));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Book Now");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(819, 442, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Booking ID");
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 254, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Student ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 254, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Division");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 254, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Group");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(508, 254, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Course");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(662, 254, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Amount");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(828, 254, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Description");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 339, -1, -1));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/ui/Button-Close-icon.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 0, 20, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setText("Book Reservation");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 270, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1043, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTable() {
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String date = null;
        refreshTable();
        BookingAvailabilityReportDao bookingAvailabilityReportDao = new BookingAvailabilityReportDao();
        List<BookingAvailabilityDto> bookingAvailabilityDto = new ArrayList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

        if (jDateChooser2.getDate() != null) {
            date = sdf.format(jDateChooser2.getDate());
        }

        String groupName = jComboBox3.getSelectedItem().toString();
        String courseName = jComboBox1.getSelectedItem().toString();
        String divisionName = jComboBox2.getSelectedItem().toString();

        int divisionId = divisionName.equals("Select") ? 0 : DivisionDao.getDivisionByName(divisionName).getId();
        int groupId = groupName.equals("Select") ? 0 : GroupDao.getGroupByName(groupName).getId();
        int courseId = courseName.equals("Select") ? 0 : CourseDao.getCourseByName(courseName).getId();

        if (date != null && groupName.equals("Select") && courseName.equals("Select") && divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByDate(date);
        } else if (date == null && !groupName.equals("Select") && courseName.equals("Select") && divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByGroup(groupId);
        } else if (date == null && groupName.equals("Select") && !courseName.equals("Select") && divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByCourse(courseId);
        } else if (date == null && groupName.equals("Select") && courseName.equals("Select") && !divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByDivision(divisionId);
        } else if (date == null && !groupName.equals("Select") && courseName.equals("Select") && !divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByDivisionAndGroup(divisionId, groupId);
        } else if (date == null && groupName.equals("Select") && !courseName.equals("Select") && !divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByDivisionAndCourse(divisionId, courseId);
        } else if (date == null && !groupName.equals("Select") && !courseName.equals("Select") && !divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByDivisionAndGroupAndCourse(divisionId, groupId, courseId);
        } else if (date != null && !groupName.equals("Select") && !courseName.equals("Select") && !divisionName.equals("Select")) {
            bookingAvailabilityDto = bookingAvailabilityReportDao.filterByAll(date, divisionId, groupId, courseId);
        }

        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[6];
        for (int i = 0; i < bookingAvailabilityDto.size(); i++) {
            rowData[0] = bookingAvailabilityDto.get(i).getDate();
            rowData[1] = bookingAvailabilityDto.get(i).getDivisionName();
            rowData[2] = bookingAvailabilityDto.get(i).getGroupName();
            rowData[3] = bookingAvailabilityDto.get(i).getCourseName();
            rowData[4] = bookingAvailabilityDto.get(i).getAvailability();
            rowData[5] = bookingAvailabilityDto.get(i).getAmount();
            defaultTableModel.addRow(rowData);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        refreshPage();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void bookingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingIdActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (bookingId.getText().isEmpty()
                || division.getText().isEmpty()
                || group.getText().isEmpty()
                || course.getText().isEmpty()
                || amount.getText().isEmpty()
                || jDateChooser2.getDate() == null) {
            JOptionPane.showMessageDialog(this, Constant.NOT_ACCEPTABLE, Constant.EMPTY, JOptionPane.ERROR_MESSAGE);
        } else if (!division.getText().equals("Saturday") && !division.getText().equals("Sunday")) {
            JOptionPane.showMessageDialog(this, Constant.INVALID_DAY, Constant.INVALID_DAY_FORMAT, JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(null, "Do You Really Want to Confirm Booking", "Booking Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == 0) {
                int nextBookingId = BookingDao.getAllBookingList().size() + 1;
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String date = sdf.format(jDateChooser2.getDate());

                String diviSonName = division.getText();
                String groupName = group.getText();
                String courseName = course.getText();

                Booking booking = new Booking();
                BookingDao bookingDao = new BookingDao();
                booking.setId(nextBookingId);
                booking.setStudentId(Constant.studentId);
                booking.setDivisionId(DivisionDao.getDivisionByName(diviSonName).getId());
                booking.setGroupId(GroupDao.getGroupByName(groupName).getId());
                booking.setCourseId(CourseDao.getCourseByName(courseName).getId());
                booking.setAmount(Double.parseDouble(amount.getText()));
                booking.setDate(date);
                booking.setStatus(Constant.STATUS_BOOKED);
                booking.setDescription(desc.getText());

                if (BookingDao.checkOverlapBooking(booking)) {
                    JOptionPane.showMessageDialog(this, Constant.OVERLAP_BOOKING_FOUND, Constant.OVERLAP, JOptionPane.ERROR_MESSAGE);
                } else {
                    bookingDao.save(booking);
                    JOptionPane.showMessageDialog(this, Constant.SAVE, Constant.SUCCESS, JOptionPane.INFORMATION_MESSAGE);
                    refreshPage();
                    MyBooking myBooking = new MyBooking();
                    myBooking.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        int nextBookingId = BookingDao.getAllBookingList().size() + 1;

        bookingId.setText(Integer.toString(nextBookingId));
        studentId.setText(Integer.toString(Constant.studentId));
        division.setText(defaultTableModel.getValueAt(selectedRowIndex, 1).toString());
        group.setText(defaultTableModel.getValueAt(selectedRowIndex, 2).toString());
        course.setText(defaultTableModel.getValueAt(selectedRowIndex, 3).toString());
        amount.setText(defaultTableModel.getValueAt(selectedRowIndex, 5).toString());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) defaultTableModel.getValueAt(selectedRowIndex, 0));
            jDateChooser2.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(BookingCourse.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void refreshPage() {
        bookingId.setText("");
        studentId.setText("");
        division.setText("");
        group.setText("");
        course.setText("");
        amount.setText("");
        jDateChooser2.setDate(null);
        clearComboBox();
        loadDataToComboBoxes();
        refreshTable();
    }

    private void clearComboBox() {
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingCourse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JTextField bookingId;
    private javax.swing.JTextField course;
    private javax.swing.JTextArea desc;
    private javax.swing.JTextField division;
    private javax.swing.JTextField group;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField studentId;
    // End of variables declaration//GEN-END:variables
}
