/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.system.ui;

import com.system.dao.BookingDao;
import com.system.dao.RatingDao;
import com.system.dao.StudentRatingHistoryDao;
import com.system.dto.StudentRatingDto;
import com.system.model.Rating;
import com.system.utils.Constant;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class MyRatting extends javax.swing.JFrame {

    /**
     * Creates new form MyRatting
     */
    public MyRatting() {
        initComponents();
        setLocationRelativeTo(null);
        loadCombo();
        beforeMount();
        jButton5.setVisible(false);
    }

    private void loadCombo() {
        ratingCombo.addItem("Select");
        for (int i = 1; i <= Constant.MAX_RATE; i++) {
            ratingCombo.addItem(Integer.toString(i));
        }
    }

    private void beforeMount() {
        refreshTable();
        List<StudentRatingDto> studentRatingDto = StudentRatingHistoryDao.getAll();
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[8];
        for (int i = 0; i < studentRatingDto.size(); i++) {
            rowData[0] = studentRatingDto.get(i).getBookingId();
            rowData[1] = studentRatingDto.get(i).getDate();
            rowData[2] = studentRatingDto.get(i).getDivisionName();
            rowData[3] = studentRatingDto.get(i).getGroupName();
            rowData[4] = studentRatingDto.get(i).getCourseName();
            rowData[5] = studentRatingDto.get(i).getAmount();
            rowData[6] = studentRatingDto.get(i).getRating();
            rowData[7] = studentRatingDto.get(i).getComment();
            defaultTableModel.addRow(rowData);
        }
        studentId.setText(Integer.toString(Constant.studentId));
        studentId.setEnabled(false);
        bookingId.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        bookingId = new javax.swing.JTextField();
        studentId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        desc = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        filterBookingId = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ratingCombo = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 50, 90, 36));

        jDateChooser2.setDateFormatString("yyyy-MMM-dd");
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        jDateChooser2.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jDateChooser2VetoableChange(evt);
            }
        });
        jPanel1.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 70, 234, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookingId", "Date", "Division", "Group", "Course", "Fee", "Rating", "Comments"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 123, 920, 123));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 80, 90, 36));

        bookingId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bookingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingIdActionPerformed(evt);
            }
        });
        jPanel1.add(bookingId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 92, 40));

        studentId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(studentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 106, 40));

        desc.setColumns(20);
        desc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        desc.setRows(5);
        jScrollPane2.setViewportView(desc);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 280, 550, 40));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Add");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 330, 94, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Booking Date");
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Student ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 253, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Rating");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Review");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        filterBookingId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(filterBookingId, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 162, 50));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/ui/Button-Close-icon.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 0, 20, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Booking ID");
        jLabel8.setToolTipText("");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 253, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Booking ID");
        jLabel9.setToolTipText("");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, -1, -1));

        jPanel1.add(ratingCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 102, 40));

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("Edit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 330, 90, 40));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("My Rating List");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 180, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String date = null;
        refreshTable();
        List<StudentRatingDto> studentRatingDto = new ArrayList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        if (jDateChooser2.getDate() != null) {
            date = sdf.format(jDateChooser2.getDate());
        }

        String bkId = filterBookingId.getText().isEmpty() ? "0" : filterBookingId.getText();
        int bookingId = Integer.parseInt(bkId);

        if (bookingId > 0 && date == null) {
            studentRatingDto = StudentRatingHistoryDao.filterByBookingId(bookingId);
        } else if (bookingId == 0 && date != null) {
            studentRatingDto = StudentRatingHistoryDao.filterByDate(date);
        } else if (bookingId > 0 && date != null) {
            JOptionPane.showMessageDialog(this, Constant.CANT_SEARCH, Constant.FAILED, JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, Constant.CANT_BE_EMPTY, Constant.FAILED, JOptionPane.ERROR_MESSAGE);
        }

        if (studentRatingDto.isEmpty()) {
            JOptionPane.showMessageDialog(this, Constant.NO_RECORD_FOUND, Constant.NO_RECORD, JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
            Object rowData[] = new Object[8];
            for (int i = 0; i < studentRatingDto.size(); i++) {
                rowData[0] = studentRatingDto.get(i).getBookingId();
                rowData[1] = studentRatingDto.get(i).getDate();
                rowData[2] = studentRatingDto.get(i).getDivisionName();
                rowData[3] = studentRatingDto.get(i).getGroupName();
                rowData[4] = studentRatingDto.get(i).getCourseName();
                rowData[5] = studentRatingDto.get(i).getAmount();
                rowData[6] = studentRatingDto.get(i).getRating();
                rowData[7] = studentRatingDto.get(i).getComment();
                defaultTableModel.addRow(rowData);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void refreshTable() {
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void jDateChooser2VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jDateChooser2VetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser2VetoableChange

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();

        Date d1 = null, d2 = null;
        SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");
        String dbDate = defaultTableModel.getValueAt(selectedRowIndex, 1).toString();
        String currentDate = sdformat.format(new Date());
        try {
            d1 = sdformat.parse(dbDate);
            d2 = sdformat.parse(currentDate);
        } catch (ParseException ex) {
            Logger.getLogger(MyBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (d1.compareTo(d2) == 1) {
            jButton3.setEnabled(false);
            jButton5.setEnabled(false);
        } else {
            jButton3.setEnabled(true);
            jButton5.setEnabled(true);
        }

        bookingId.setText(defaultTableModel.getValueAt(selectedRowIndex, 0).toString());
        studentId.setText(Integer.toString(Constant.studentId));
        String rating = defaultTableModel.getValueAt(selectedRowIndex, 6).toString().equals("Review Needed") ? "Select" : defaultTableModel.getValueAt(selectedRowIndex, 6).toString();
        ratingCombo.setSelectedItem(rating);
        desc.setText(defaultTableModel.getValueAt(selectedRowIndex, 7).toString());
        if (!rating.equals("Select")) {
            jButton3.setEnabled(false);
            jButton5.setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        refreshPage();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void bookingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingIdActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (bookingId.getText().isEmpty() || studentId.getText().isEmpty() || ratingCombo.getSelectedItem().toString().equals("Select")) {
            JOptionPane.showMessageDialog(this, Constant.NOT_ACCEPTABLE, Constant.EMPTY, JOptionPane.ERROR_MESSAGE);
        } else {
            RatingDao ratingDao = new RatingDao();
            BookingDao bookingDao = new BookingDao();
            Rating rating = new Rating();
            SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");
            String currentDate = sdformat.format(new Date());

            int month = 0;
            try {
                Date date = sdformat.parse(currentDate);
                LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                month = localDate.getMonthValue();
            } catch (ParseException ex) {
                Logger.getLogger(BookingCourse.class.getName()).log(Level.ALL.SEVERE, null, ex);
            }

            int id = Integer.parseInt(bookingId.getText());
            int star = Integer.parseInt(ratingCombo.getSelectedItem().toString());
            String description = desc.getText();
            rating.setId(ratingDao.getAllRating().size() + 1);
            rating.setBookingId(id);
            rating.setStudentId(Constant.studentId);
            rating.setCourseId(bookingDao.getOne(id).getCourseId());
            rating.setStar(star);
            rating.setDate(currentDate);
            rating.setMonth(month);
            rating.setDescription(description);
            ratingDao.save(rating);
            BookingDao.updateBookingStatus(id, Constant.STATUS_ATTENDED);
            JOptionPane.showMessageDialog(this, Constant.SAVE, Constant.SUCCESS, JOptionPane.INFORMATION_MESSAGE);
            refreshPage();
            beforeMount();
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (bookingId.getText().isEmpty() || studentId.getText().isEmpty() || ratingCombo.getSelectedItem().toString().equals("Select")) {
            JOptionPane.showMessageDialog(this, Constant.NOT_ACCEPTABLE, Constant.EMPTY, JOptionPane.ERROR_MESSAGE);
        } else {
            RatingDao ratingDao = new RatingDao();
            BookingDao bookingDao = new BookingDao();
            Rating rating = new Rating();
            SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");
            String currentDate = sdformat.format(new Date());
            int month = 0;
            try {
                Date date = sdformat.parse(currentDate);
                LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                month = localDate.getMonthValue();
            } catch (ParseException ex) {
                Logger.getLogger(BookingCourse.class.getName()).log(Level.ALL.SEVERE, null, ex);
            }

            int id = Integer.parseInt(bookingId.getText());
            int star = Integer.parseInt(ratingCombo.getSelectedItem().toString());
            String description = desc.getText();
            int tobeUpdatedId = RatingDao.getRatingByBookingId(id).getId();
            rating.setId(tobeUpdatedId);
            rating.setBookingId(id);
            rating.setStudentId(Constant.studentId);
            rating.setStar(star);
            rating.setCourseId(bookingDao.getOne(id).getCourseId());
            rating.setDate(currentDate);
            rating.setMonth(month);
            rating.setDescription(description);
            ratingDao.update(rating);
            JOptionPane.showMessageDialog(this, Constant.UPDATE, Constant.SUCCESS, JOptionPane.INFORMATION_MESSAGE);
            refreshPage();
            beforeMount();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void refreshPage() {
        bookingId.setText("");
        desc.setText("");
        filterBookingId.setText("");
        jDateChooser2.setDate(null);
        ratingCombo.removeAllItems();
        jButton5.setVisible(false);
        jButton3.setEnabled(true);
        loadCombo();
        refreshTable();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyRatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyRatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyRatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyRatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyRatting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookingId;
    private javax.swing.JTextArea desc;
    private javax.swing.JTextField filterBookingId;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> ratingCombo;
    private javax.swing.JTextField studentId;
    // End of variables declaration//GEN-END:variables
}
